.. Kenneth Lee 版权所有 2021

:Authors: Kenneth Lee
:Version: 1.0
:Date: 2021-11-26
:Status: Draft

逻辑哲学论读书笔记
*******************

前言
======

本文原来打算写成一个独立的目录的，因为我觉得维特根斯坦既然可以把他的观点分成多
个独立的章节，我也应该可以一个章节，一个章节去理解他的观点。但我反复阅读逻辑哲
学论的文本（英文版）多次以后，我发现这是不可能的。他这个理论，你要不搞明白了，
要不就是不明白，没有办法单独去理解其中一部分。所以，最终我把那个目录删掉了，变
成这里的一篇文档。

我是个软件架构师，我的大部分工作都是抽取一个复杂系统的抽象。我通常用的方法是用
不同的目标作为基线，对这个被分析系统针对这个目标的相关特征进行抽取。这个被分析
的系统就会被收缩为一组“\ :doc:`逻辑闭包<../软件构架设计/逻辑闭包>`\ ”，之后再把
这些逻辑闭包抽象出来的名字作进一步的收缩，这样逐步收缩下去，这个系统的细节逻辑
和我对它的抽象就对应起来了。

网上有一个Maynard Handley写的关于Apple M1电脑的分析材料，很有名，叫\ *M1
Explainer*\ 。他完全从一个非M1设计者的角度分析M1的设计思路，他的手法和我这个是
类似的，所以我也想用他的表述来增强我这个意思，他的说法是：

        | As I have said, I've written and rewritten, experimentd and
        | re-experimented, with this section rpeatedly. I would come
        | up with a general theory of how it all fitted together, then
        | realize all my probes did not test and alternate explanation,
        | run a new set of tests, and again be surprised.

所以，我这里也有他那个号召：

        | If someone else has a better theory of how it all fits together,
        | or advises a different set of experiments showing a flaw in my
        | analysis, or even realizes I made a mistake in some of the
        | experiments (it happens! especially when you have no idea what
        | to expect, what counts as an unexpected result), please help advance
        | our common understanding.

我们通过“名”来思考问题，名是一个抽象，是我们“结构化思维”的最小单位，但名是被细
节所解释的。这就好像在机器学习中，你用来训练的数据集（比如一千张猫的照片）是无
法被逻辑化去思考的，你要思考就只能用“猫”这个名字。所以，计算机的图灵机部分，要
进行if...else, while, then，这些判断，都必须使用结构化数据，使用数字化后的结果
（比如，“如果有猫通过本区域启动告警”）。而猫的照片，对我们来说就没有逻辑可言，
就是一片混沌。这就是道德经中说的“恍惚”，也是现在我对维特根斯坦这句话的理解：

        | What can be said at all can be said clearly,
        | and what we cannot talk about we must pass over in silence.

.. note::

  我还看了网上一些西方哲学老师的课程，发现也有人认为这句话不是这样翻译的，
  而是：What we cannot talk we should keep sinence。这听起来好像是一种鸡汤，
  我不认为一个哲学家会不讲规律而去讲道德，所以我是不认可这种理解的。

我们能说清楚的，就是“名”，说不了的，就是混沌，混沌无法通过语言去传递，只能在
silence中彼此认可。你也看过猫，我也看过猫，我们就可以用猫（这个名字）来传递信息
，但猫本身的那些细节，无法被传递。当然，你还可以对猫的细节进行分类，但你永远都
会剩下无法传递的部分。

作为印证，前面这句话后面，维特根斯坦是这样说的：

        | Thus the aim of the book is draw a limit to thought or rather
        | -- not to thought, but to the expression of thougth, we should
        | have to find both sides of the limit thinkable.

每个名都可以被无限维度，无限空间地进行细分，这些细分的名，一同定义了这个抽象的
名本身。所以，高层的名，是一个细节的名的集合。直到我们只能通过Silence传递到
Atomic的名上面。

所以，我们拆解一个构架，比如“逻辑哲学论”，我们唯一的方法是拆解它下一层的名，看
我们拆出来的名本身能否逻辑自恰（这个抽象的名，和它被拆出来的名共同构成一个逻辑
闭包），以及这些逻辑是否和维特根斯坦自己的描述一致。这也是我拆《道德经》的方法
，我对自己的这个拆解结果是比较自信的，因为我拆解结果，全文所有逻辑都是自恰的，
不像某些人那样，这几句话是谈管理，那几句话是谈军事，完全连不到一起。你永远没有
办法问一个作者他说的话是什么意思，但如果一个抽象还能被使用和传递，它的逻辑是统
一的，这是唯一的判断标准。

背景介绍
=========

我是在写“道德经直译”专栏的时候别人推荐我看的维特根斯坦的理论的，他们说我的观点
（其实我认为是老子的观点了）和维特根斯坦很像，我就很有兴趣去看看。

我看书尽量希望看原文，特别是哲学，构架，标准，计算机一类的书，否则翻译者的水平
会成为原始信息的过滤器。

我给各位读者一个鲜活的例子。

在看这本《Tractatus Logico-Philosophicsu的时候》的时候，我看到里面使用了一个概
念：Truth-Function。我不知道它是什么意思。图方便，我查了一下中文维基上的解释，
它是这样的：

        | 在逻辑中，真值函数是从语言的句子生成的函数。
        | 它采用来自 {T,F} (就是真实和虚假)的真值。
        | 例如句子 A → B 生成真值函数 h(A,B)，它的真值是 F，
        | 当且仅当 A 的值是 T 而 B 的值是 F。
        | n 个变量的命题句子生成 2^{2^n} 个真值函数。
        | 比如，如果有像 A → (B → A) 这样的 2 个变量的命题则有 16 个生成的真值函数。
        | 陈述或命题被称为是真值泛函的，如果它的真值由它的部件的真值来决定。 
        | ...

各位读者可以停下来，好好想想，你是否知道它在说什么？反正我是看不懂，我也找了身
边的人来看，他们也看不懂。

然后我们看看英文版的：

        | In logic, a truth function is a function that accepts truth values
        | as input and produces a unique truth value as output.
        | In other words: 
        | The input and output of a truth function are all truth values;
        | a truth function will always output exactly one truth value;
        | and inputting the same truth value(s) will always output the same truth value.

我都不用看完，作为一个计算机工程师，看第一句我就清楚知道这是什么了。当然，我也
只是知道它的内涵，不看后面的介绍，我不能理解这个定义的外延，但至少内涵已经定义
得非常清楚了，反观前面那个中文版本，我都不知道它在说啥。

这个不是中文表达能力的问题，纯从翻译的角度，甚至你都不能说这个翻译是错的。它把
英文版本的内容不分重点，不分范围地放了上来。

因为翻译者根本就不懂这个领域，他不知道这些表述在解决什么问题。所以换一种表达的
时候，他被这种新的语言的自身混沌的部分左右了原文想要强调的东西，他突出了非关键
的信息，没办法突出问题的主题，最终你就完全不知道这个翻译在表达什么了。因为在这
个新的逻辑闭包中，逻辑无法维持连续，信息传递就失败了。

所以维特根斯坦的书，我也希望看原版。问题是，我不会奥地利语。所以，只能求其次了
，找一个同是西方语系的英文版本翻译来看吧（关键是这个翻译者本身就是个哲学家），
所以我最终选的是这个版本：

        | 《Tractatus Logico-Philosophicsu》，
        | Writen by Ludwig Wittgenstein，
        | Translated by D. F. Pears and B. F. McGuinness
        | With an introduction by Bertrand Russell.

我尝试按Bertrand Russell的介绍，向“定义一种可以最大限度表达逻辑的、哲学的观点的
基本语言”这个角度来解构维特根斯坦的设计。

我假设看本文的读者是看过维特根斯坦的定义本身的。这个定义很短，有点像《道德经》
那样的长度，风格其实也很像，所以，要看完还是很快的。就是要搞清楚他那些基本定义
的范围非常困难。也需要像道德经那样反复进行前后对应。

基于读者都看过原文这个假设，我不会解释什么叫“定义1.1 1”，也不会把所有的原文定义
全部拿上来，只是尽量去抽取其中和我分析目标相关的关键表述，我会对应这个抽取的表
述是否和其他细节冲突，但我不会写出来，这个动作需要读者自己做。

理论基础
============

《逻辑哲学论》的定义比较“长”。这里说它长，不是文字长度意义上的，而是程序员眼中“
一个函数有3000行”那种意义的长。程序员都知道，一个程序有几万行，几百万行，都还容
易看懂，但如果一个函数有几千行，就很难看懂了。因为我们组织逻辑的时候，能相对独立
抽离的逻辑，我们都会独立放到一个函数中，我们理解一个逻辑，都在一个函数里面，这
样还是比较容易的，其他函数对这个函数来说，只是一个“名”，我们是不管那个“名”的内
部逻辑的。但如果你一个函数本身就很长，要理解这个函数的逻辑就很复杂了，人脑不擅长
处理这种东西。

逻辑哲学论就是这样弄的，一个概念的定义可以十几页，你都没法抽象它原始的含义，就
算他实际上也组织成一个层次结构，你都不好完整地理解它。比如我给你一句简单的话：

        如果维特根中心斯坦的中间序列对他的反身代谢逻辑弧构成一个不来梅等比逻辑，
        那么这个中间序列对这个逻辑弧的几何重心具有溶解性质。

虽然这个表述倒是很短，但里面每个概念都要看很长的一个定义你才知道他说什么，这就
很难看懂了。

我这里要做的是，在他刚开始定义那个概念的时候，就把他打算描述的那个具像拿出来，
作为后面阅读的一个标记，这样我们就可以反复去对比这个标记，确认我们没有迷失我们
的方向。

维特根斯坦认为，恍惚的部分是无法被描述的，所以只要你开始交流，开始传递，就必然
是一个结构化数据。这个概念我用两个类似的定义帮助读者理解：

其一，道德经里的道和名的关系。世界的客观存在，是道，你也能感受到它，你能看它，
你能听它，但你没法说它，因为你说的是用“语音”这个媒介，去“部分”贴近你对世界的那
个感受（Sense），这已经转意了。所以，名不是不可名，道也不是不可道，但两者不是全
等的。

这不但体现为语言，同样体现为文字，体现为脑子里面的思考。

.. note::

  有个很有趣的问题，在中国的文化中，常常用道表示高度抽象，而用器表示具像。而道
  德经中，道是全部，而不是抽象。这好像完全反了，但其实它们是不矛盾的。道就是全
  部，但全部没法说，所以，抽象得最好的名，就成了道的代表，而抽象得不好，关注不
  了最重要本质的名，就被叫器。

  “写好程序最重要是控制好数据之间的关系”，这给人的感觉就是道，因为它总结得比较
  好。而“写好程序就要知道libc的API列表”，这给人的感觉就是器，因为换一种编程语言
  这个抽象就不怎么成立。但“写好程序最重要是控制好数据之间的关系”绝对代表不了写
  程序的所有方面，这不是道德经中的道，但要描述写程序所有的细节，你也没法说的清
  楚，所以道的本质就是大，大就逝，逝就说不清楚了。道就只能Pass over in silence。

自然数不代表{0, 1, 2, 3...}，但你也不能说{0, 1, 2, 3...}不是自然数。“自然数”只
是一个“名”，{0, 1, 2, 3...}暂时在我们这个上下文中可以说更接近道。但你要说，你就
只能说自然数，你说不了所有的自然数。所以道德经只能这样说：道曰大，大曰逝，逝曰
远，远曰反。他也就能说到这个程度了，剩下的，你就只能Pass over in silence（这个
概念经常要用，我给它一个缩写，叫POIS）。

其二，我们可以从机器学习的角度来理解这两个概念：我们一般把计算机逻辑判断的部分
，叫结构化判断。比如，我们一般程序是这样写的（不懂程序不要紧，懂英语就行，当一
个（人对计算机的）工作指导看就行）：

.. code-block:: python

  def the_action(object):
    if object is CAT:
      play("喵")
    else if object is MOUSE:
      play("吱")
    else
      play("咕噜咕噜")

这些判断，在我们的认知中，是精确的，我们可以进行判断的，要不选左，要不选右的。
传统计算机最擅长的就是干这种事情了，这部分就叫结构化信息处理。

而机器学习就不同了，机器学习给计算机提供一只猫的图片，或者声音，气味的（大量）
数据，然后问“这是什么？”，然后计算机给你一个答案：这是一只猫。

这里猫就是一个名，而那些什么图片，声音，气味之类的东西，就是“道”，或者说更贴近
道（因为还可以细分），它的本质就是“大”，大到你没法在语言和思考中罩住它。

下面这个图是Tensorflow教程的一个例子，叫fashine mnist，用101700个参数表达对一组
时尚物品图标的认知：

.. figure:: _static/fashine_mnist.png

给每次给进去一副图，算法用101700个参数来计算一个输出（就是旁边那副坐标系的图），
图标很复杂，也没有什么逻辑，最后那副坐标系的结果就很简单，鞋子就是7，衣服就是4
……图标本身就是POIS，而数字就是逻辑的部分。

无论是什么吧，对人脑的某个时刻，我们有一部分是进行结构化处理的，有一部分完全是
个恍惚，你觉得你看见了它，但你的结构化信息里面没有它。那个部分对结构化信息处理
来说，不存在，只能POIS。

而逻辑哲学，就是放弃了POIS的部分，把POIS当作黑盒，仅讨论结构化信息如何利用的那
部分逻辑的建模。在本文中，我把这部分的信息，称为Tractatus。

也就是说，Tractatus对应道德经中的“名”，计算机中的结构化数据；POIS对应道德经中的
“道”，计算机中的非结构化数据。但我们不能说它们完全相同。

为了能够割裂Tractatus和POIS，维特根斯坦完全消除了Tractatus对POIS的依赖，而用一
个名字怎么“用”，来定义这个名字本身。如果你的逻辑判断（请具像地联想一下前面的程
序）用到了一个对象的属性，那么这个属性就是这个对象的一部分，如果你没有用到这个
属性，它就不是，这个对象当初被定义时所使用的原始的POIS，不是问题的一部分。

这样，Tractatus就可以完全在“逻辑”的范围内讨论问题了，不需要在去纠缠“这是不是我
说的那个东西”。所以，Tractatus和道德经是完全不同的学问。Tractatus讨论的是纯粹的
“名的规律”，而道德经讨论的是“名被道影响的规律”。

让我们这样想这个问题：在Tractatus中，如果你整个逻辑判断模型是：

        | 这是狗，它会叫，会吃，会生后代，可以豢养

然后你还有一个判断模型：

        | 这是猫，它会叫，会吃，会生后代，可以豢养

对于Tractatus来说，这就是同一个东西，我判断不了你当时看见这种东西那个POIS是什么
，但在你这个逻辑世界中，这就是同一个东西。

而道德经不是这样想这个问题的，道德经一直想的是，你认为：

        | 这是X，它会叫，会吃，会生后代，可以豢养

这个概念现在是这样的，它一直是这样吗？它发展起来的规律是什么样的？如果人们开始
因此定义了“狗肉好吃”，那么这些条件就不会是这些条件，我们会从那个集合中抽取其他
的属性。所以，求强就要处弱，求好就要面对坏。它一直讨论的是“道”对“名”系统的输入
和改变。而逻辑哲学讨论的是：现在我们停止POIS对Tractatus的输入，Tractatus呈现什
么样的特征。

所以，前面提到的这个Truth Function就很重要了。因为所有有效的逻辑判断，最终都只
反映为“在集合中”和“不在集合中”，或者说“属性匹配”和“属性不匹配”这种判断。那么，
我们就可以把所有的的观点（Proposition），看作是原子定义（Atomic，再分解就成为
POIS的概念）的一种组合（Complex）。而这个组合方法，就是Truth Function。Truth
Function接受Truth Function自己作为输入，比如“猫会上树”，这是一个Atomic；“狗会游
泳”，这也是一个Atomic，那么我们组合一下，“狗会游泳而且猫会上树”，这是用真值函数
“而且”组合出来的一个Complex。如果我们知道两个Atomic的真假，我们也就知道了这个
Complex的真假了。如果所有的Complex都是通过真值函数来组合的，那么，我们就可以清
晰描述我们所有Tractatus要描述的问题。

为此，维特根斯坦还特意去解决了罗素悖论中的问题，不允许把一个Truth Function自己
作为自己的输入。这里的关键就是他前面那个定义：一个名称被它的所有用法所定义，所
以，如果一个真值函数的输入中包括了它自己，那么它自己作为它的输入定义了一个新的
真值函数。所以，不存在F(Fu)，因为F本身不能作为F的输入，它要求写作
:math:`(\exists\psi):F(\psi\ u).\psi\ u=Fu`
。这里把内层的Fu另外定义成\ :math:`\psi`\ ，让F的定义变成加上\ :math:`\psi`\ 的
定义，把两者分开了。

.. note::

  这里这个描述让我pending了很久，因为不知道这个.是什么，也不知道它的优先级是什
  么。一直看到最后，我才知道这是and，优先级在整个表达式中最低。

逻辑哲学这个基本的概念，也告诉了我们一个最基本的信息传递的原理。信息的传递是由
发送方和接收放共同决定的。这也是道德经中说的混沌的原理：视而不见，听而不闻，博
之不得。为什么会这样？因为你接受这个“POIS”的那个模型中，没有抽取这个信息。

我给你一张纸条，里面证明了哥德巴赫猜想，你拿起来就上厕所了：我希望传递的信息是
哥德巴赫猜想，你提取的信息是“这东西可以擦屁股”。所以，定义你的世界不是这个世界
的全部，而是你建立的那个模型。这也是我这里写这么多的原因，我给你抽象这么多概念
然后建立一个可以对细节信息进行“真”，“假”判断的模型，没有这个模型，所有文字都只
会变成“文字”这个名字，抽取不出其他有效信息的。

另一个值得关注的问题是可能性。这个问题对于中国人来说也非常有趣。对于西方人来说，

        **If** I work hard, **then** I will be promoted.

如果把I work hard定义为p，I am promoted定义为q，那么这句话在逻辑上表示为：

        p->q

念做“p imply q”。它和“~p v q”是等价的。所以，在英文中，上面这句话可以这样说：

        **Either** I don't work hard，**or** I am promoted.

这背后是这样一张真值表（T表示True，F表示False，v表示or）：

.. _pq真值表:

.. table:: p->q和~p v q真值表

  +---+---+------+----+--------+
  | p | q | p->q | ~p | ~p v q |
  +===+===+======+====+========+
  | T | T |  T   | F  |    T   |
  +---+---+------+----+--------+
  | T | F |  T   | F  |    F   |
  +---+---+------+----+--------+
  | F | T |  ?   | T  |    T   |
  +---+---+------+----+--------+
  | F | F |  ?   | T  |    T   |
  +---+---+------+----+--------+

我们推想一下：

如果p为真，就会有q为真，那么我们是否可以说“p可以推出q”？可以。所以“p->q”为真；
同样p为真q为假，“p->q”不成立，所以是F。但如果p是假，那么我们能否说p可以推出q呢
？这在中文里是“不知”，这个地方无定义。

但在西方哲学中，他们认为可能性存在，就没有拒绝，所以这都可以看作是真。一旦我们
这样看这个问题，p->q和~p v q就是等价的。所以他们说“Either I don't work hard, or
I am promoted.”等价于说：“只要我努力工作，我就能被升职”。

但我们中文是没有这个表达的，我们可以说：“如果我努力工作，我就能升职”，或者“如果
我不努力工作，我就升不了职”。我们是直接排除掉p=F的情形的。我们要非常小心这个地方
的陷阱。西方哲学用集合来看待每个描述表达的范围，这样，可能性存在就可以用于和其他
集合进行交集运算，所以不能排除“可能存在”的集合范围的。这就是为什么维特根斯坦说
“一个fact包含所有的可能性”。因为西方逻辑就是这样定义True的，称为
Truth-possibility（4.4 4）。

这一点对于程序员来说其实是最好理解的，因为计算机永远都要输出，你不能说你不知道
，你只能说“我的选择是XXX”，不输出也是一种输出，所以，任何时候，计算机都必须选择
True or False，没有第三种可能。

有了这些基本的认识，我们开始看细节：

细节理解
========

定义1：The world is all that is the case.
--------------------------------------------

前两章定义了很多名字，让我尝试用我的语言去重新解释一下这些名字：

World
        这里和《道德经》的“天地”是一个概念，是头脑中“认为的”，“真实的”那个“世界”。

Fact
        你认为是“事实”，你认为的“真实”。（如前所述，它包括“可能是真实”的情形）

Thing
        《道德经》中的“道”中的对象，是客观现实的实体，是造成名字的原因。

这一章重点定义逻辑世界是什么——它只是我们头脑中（Logic World）对外部世界的一个分类。


定义2：What is the case
--------------------------

Case
        Thing的一种可能性。我们认知Thing，同时认知了它有很多种可能性，但最终发
        生了的，就是is the case，如果没有发生，就is not the case。如果is the
        case，它就是fact，否则它就不是fact。

Logic
        Logic头脑中理性思考的部分，是一个静态的概念，是一种状态（State），是我
        们当前对各种对象的状态的判断。
        *In logic，nothing is accident*\ 。
        我们觉得明天可能下雨，也可能不下雨。这个是我们对这个事情的全部判断，下雨
        和不下雨都在明天的天气这个对象中，都是我们对明天天气这个Object的认知的
        一部分（而且都是True），也就是说，如果我们认为某个可能性存在，我们脑子里的
        Picture就个这个空间画了一个等于True的空间。
        *A new possibility cannot be discoverred later.*
        如果我们有了新的发现，我们现在的Logic，就不是过去那个Logic了。

Picture
        从空间上说，所有逻辑都可以被用Picture的方式表达，也就是说，如果我们能用逻辑
        的方式思考一个问题，那么我们就可以用Picture表达这个case。

        *2.1 We picture facts to ourself*

Object
        逻辑空间中一个被命名的一个对象，是组成Picture的，被结构化处理的实体。
        *In a manner of speaking, objects are colourless。*
        Object是逻辑空间中不变的部分，包含它的所有变数，而这个变数，用对象的配
        置（Configure）参数来表示。比如我们说“苹果是红”的，这个苹果和红，就是
        Object，苹果可以有变化，红一点的，青一点的，都是这个变化的范围，是它的
        configuration，但只要我们还认知某个对象是苹果，在我们的“世界”中，它就是
        红的。而红的定义同理。
        所以，苹果是我们世界中不变的部分，青不青，是它的范围。

Logic Form
        被认知为结构化数据的Picture上的逻辑，表达了同一个Logic Form。也就是说，
        两个东西即使是不一样的，如果我们切取了它部分的要素作为“名”，那么这两个
        东西在逻辑上对我们来说就是一样的。如果我们认为它们不一样，那么我们肯定
        用了特定的属性去区分它们，然则它们的Logic Form的Picture一定是不同的。

State of Affair
        Object的自由空间（可能性）组成的一个逻辑空间。

“2.0 2 4 Substance is what subsists independently of what is the case”，
“2.0 2 5 It is form and content”。
我们对物质的认知也只是逻辑形式和POIS，也是分类而已。

这一章重点定义的是逻辑世界的特性：既然逻辑是真实世界中我们放弃了POIS的部分，那
么，这个世界中最终不存在模糊性的东西，任何一个决策进入这个世界，最终总会落到某
个范围中，非左即右，这种判断包括你对外说：“我不知道”，“我可能去，我可能不去”……
这些都是你的最终决策。

所以，世界（逻辑世界）可以被Picture表述，而且Picture是无色的。这里注意两点，为
什么可以被图像化表述——因为逻辑是个分类，分类其实是一个“内-外”的概念，这本身是个
空间概念。所以，抛弃我们复杂的语言，在我们脑子里，这些复杂的逻辑，可能就是个图
，至少在我们遇到不能表达为图的逻辑前，我们可以这样认为。

而颜色，在这幅图中不存在，因为我们不承认POIS，所以，我们最多认为这种红色和这种
红色相同，这种红色比那种红色颜色深……这同样是一种在集合内和不在集合内的分类，所
以，世界是无色的。

所以，在维特根斯坦的定义中，我们的逻辑世界其实是一个对世界认识的分类，这个分类
用Object来表示，每个Object都有一定的范围，这个范围被它的Configuration所定义。
我们通过关联一个或者多个Object给自己描述自己对这个世界的“判断”，比如关联
**苹果**\ 和\ **红的**\ 两个对象，决定了我们对苹果和红的两个对象的判断。


定义3：A logical picture of facts is a thought
-------------------------------------------------

这里开始把logical picture引入到“想法”这个概念上，也就是说，只要我们想得出来，它
就是结构化的，那么我们就可以用图来表示。

*3.0 0 1 'A state of affairs is thinkable': what this means is that we can
picture it to ourselves.*

这里有一个观点很有意思：

        *3.03 Thought can never be of anything illogical, since, if it were, we
        should have to think illogically*.

想法不可能是不合逻辑的，否则我们的认为它不和逻辑的想法本身不合逻辑。我们平时认
为不合逻辑的想法是说它不符合物理经验，但它本身仍是合乎逻辑的。

“这是一只不是猫的猫”，符合逻辑，因为它描述了一种可能性，并且可以被图形化，只是这个
被图形化的对象不存在而已。

一个先天的知识只在它自己证明自己，而且没有任何其他对此进行比较的情况下是可能的
（3.0 5）

*A proposition contains the form, but not the content of its sense. （3.1 3）*

上面这句话是我最想看到证明的。因为这是我经常要用的逻辑：一个函数的描述，只包括
它本身所写的逻辑，不包括它调用的那些函数包含的逻辑，比如：::

        function Reset() {
                do_reset(1);
        }

这个函数只包含了do_reset()这个调用要求，没有包含真的把系统reset的行为，把系统
reset的行为，是do_reset()干的，Reset里面没有包含那些信息。所以，当我们有一个想
法，我们的想法只是包含了我们构成这个想法本身的那些子概念之间的关系，不包含那些
子概念里面的子子概念的关系。

3.1 4定义了Propositional Sign表明，所有的陈述，只是对象之间的关系。

而这些对象，最后可以追溯到The essence of a propositional sign。也就是我们只能在
沉默中传递的东西，或者称为Simple signs（3.2 0 1）或者primitive sign (3.2 6)。

所以，所有陈述中的对象，没有被陈述的时候是Object，被陈述的时候是Propositional
Sign。所有的陈述都只能说明Propsition Sign的关系，不能说明Proposition Sign内部的
结构（在沉默中传递）。所以，所有名其实是和其他名的一个关系。我们不需要管名字是
什么意思，我们只需要知道它是怎么用的。最小的的名字之下，是只能从沉默中传递的东
西。

这一章反复提到Content这个概念，我把它理解为“完满”，也就是道德经中“一”的概念。所
以，
*An expression is the mark of a form and a content*\ 。
这是说，一个表达，要不表达一个非一的结构，要不表达一个完整的概念，这个概念中，
所有东西都在恍惚中，你无法定义它的结构，因为它没有分别让你定义名。

一个Proposition定义的部分，是它的Constant，而所有其他部分是Variable。（3.3 1 2
），这就是说，当我们说一句话的时候，我们定义了一个集合，这个集合的边界就是它的
所表述的部分，而它没有表述的部分的，就是他集合内部的自由度。

也就是说，一个名字的所有用法，定义了它的范围和它的内涵。如果这个范围完全一样，
我们就用一个符号（sign）去表示它。（换句话说，我们不用一个名字的定义去定义这个
名字，而用它的所有用法去定义这个名字，如果一个名字和另一个名字的所有用法都是一
样的，那么就算这个名字不同，我们也认为这两个名字是一样的），所以，如果名字的
Pictual Form一样，它们就是一样的。

Sign是逻辑符号，表明它的逻辑含义的是它和其他Sign的关联关系。我们不关心它本身的
含义。

现在终于到戏肉了：如果把一个Proposition本身（原文是constituent of proposition）
作为一个variable，那么我们可以定义一个“类”（class，程序员真适合当哲学家，理解这
些概念都是感性的，但在生活中你几乎不可能直接接触这些抽象概念。不知道为什么没有
把编程作为哲学的必修课？），这个类构成一个“逻辑原型”（Logical Propotype）。

这种原型可以抛开那个variable本身，全部用符合代替，写成这样：

:math:`[\overline{p}, \overline{\xi}, N(\overline{\xi})]`

定义4：A thought is a proposition with a sense
-----------------------------------------------------------------

这一段很长，但我不知道有什么特别的意思。在我眼中，这似乎全部是为定义5作的准备。

定义5：A proposition is a truth-function of elementary propositions
---------------------------------------------------------------------

这里开始用公式的方法定义真值函数，还记得我们前面那个\ pq真值表_\ 吧？如果我们固
定输入的顺序，然后把结果作为它的定义，我们就可以这样表示p->q的结果：

        (TFTT)(p, q)

用计算机的语言来说，我们用0表示T，用1表示F。TFTT分别是pq作为二进制数等于0, 1,
2, 3的时候的结果。

所以，truth-ground，就是这个表达中，所有等于T的pq的取值（我叫它真值底面，想象一
个立体对地面的投影占据的一片区域）。如果p的底面在q的底面里（这个地方原文表达指
代很不清晰，我不知道有没有理解反了，暂时这样理解，后面看要不要变），那么我们就
认为p follow from q。用中文表达，我认为p是q的引申。只要q为真，那么p就为真。

所以p是p.q的引申，因为如果p.q成立的话，p也一定成立，所以，p.q定义的世界里面，包
含了p。

这个定义很容易误会，似乎p.q的集合范围更小（p和q同时成立），但这里关心的是p.q成
立后，还有多少东西还是同时成立的，所以p.q的范围更小，所以它的真值底面更大。

用这种定义方法，我们可以这样定义一个集合：[a, x, O'x]。其中a是初值，x是变量，
O'x是下一个成员的计算方法。

比如自然数，我们理解自然数，从来不是理解它的全集，而是它这样一些信息：

1. 它的初值是0。
2. 把它本身定义为一个符号，比如\ :math:`\xi`\ 。
3. 它下一个值，等于前一个值+1

用前面的表示法，我们定义自然数的范围，就应该写作：
:math:`[0, \xi, \xi+1]`\ 。

这样理解这个问题就有了通用性了。我们基本上可以认为我们搜索任何一个范围，都是一
种follow from。

这样，维特根斯坦就把每个真值函数的都认为是一个基本的判断对最终结果的一个影响，
类似这样：\ :math:`(-----T)(\xi,...)` 。

然后，他就认为这个表述其实就是让\xi取不是the case时的实际定义，表示成
:math:`N(\overline{\xi}]`\ 。从而得到下一章那个经典表达：
所有真值函数最终都可以表达为：
:math:`[\overline{p}, \overline{\xi}, N(\overline{\xi})]` 。

我没有看明白为什么。

定义6：The general form of a truth-function is...
-----------------------------------------------------------------

这一段需要很多其他逻辑哲学的背景（比如罗素的Theory of Types以及Frege的一些理论
作为基础），我暂时没有时间看那么多的东西，而且他们这个描述系统似乎仅仅局限在逻
辑表达的清晰性上。我对这件事情本身是没有兴趣的。所以这一段我水过去了。

我觉得它的本质就是基于上面那个公式，定义他的图表示符号，这个符号系统让所有的原
始真值原语通过非和或两个方法组合起来。描绘成每个原语的True和False组合的关联。我
没有看明白这样表述以后可以解决什么问题，可能是因为我没有这种逻辑哲学的基本知识
吧。

定义7：What we cannot speak about we mush pass over in silence
-----------------------------------------------------------------
这个定义就只有标题上这一句。

整个理论的总结
==============

我觉得，整个维特根斯坦的理论的核心在于如何用逻辑把和我们的判断有关的部分独立出
来，研究它的表述上的规律。但它在逻辑细节上的很多判断，需要有基本的其他逻辑哲学
的基础，暂时从这里我最多是知道他研究的是个什么问题，也可以得到很多思考角度上的
帮助，但暂时对它在这个哲学表述上的好处，还是没有弄懂。

总结
====

暂时看到这里，工作太忙，就写不深挖下去了，让子弹飞一段时间，等发酵一段时间在回
来研究这个问题。

.. Kenneth Lee 版权所有 2022

:Authors: Kenneth Lee
:Version: 0.1
:Date: 2022-09-14
:Status: Draft

C++编程入门6：DevC++ IDE环境
****************************

好了，我们现在知道你们学校用的环境是Dev C++了。我也来解释一下Dev C++和我们之前
学习的知识是什么关系。

Dev C++是一个IDE，最早是BloodShed公司开发的，后来这个公司不开发了，就开放了源代
码，贡献了出来。所以，这个软件其实是免费的，但国内有些公司组合了一下，直接拿来
卖钱，所以有时你会在网上看到收费的版本，别给钱，找免费的版本就对了（比如这里：
https://devcpp.gitee.io/）。

IDE，是“集成开发环境”的缩写。我一开始建议你不要学用IDE，因为IDE本质上就是把很多
可以自动搞定的事情给你隐藏了。但正如我们一开始说的，它隐藏得越多，你知道得越少。
这样你学了半天，你都不知道自己在干什么。但如果要应付考试呢，你还是要对某个菜单
在哪里，某个命令是什么，这些东西很熟悉才行，所以，如果学校用这个东西做基本环境，
最好还是多用用，熟悉些才不会手忙脚乱。

你写了一段时间程序，也知道软件写错了是很常见的现象，特别是DevC++这种老旧的，没
有多少人用，又集成了一堆其他软件的软件，它是有不少问题的，如果你不习惯它的问题
（软件叫Bug），考试会弄半天都没法运行，这很亏。

其实现在国内更流行的IDE是VS Code（这个东西你Windows上已经安装了），你们学校可能
就是因为懒得升级教材才继续用这个东西。但无论如何，多看一两个环境是什么样的，也
有助于你理解C++这个语言的本质是什么，所以学习一下也没坏。

长期使用，我是建议还是使用前面介绍的Windows的Linux环境比较好，因为那个工具更丰
富，更现代化（比如直接使用git进行版本管理），DevCode太老旧了。等你熟悉Linux的运
行环境，正式写程序的时候，可以根据喜好继续用基本工具，或者直接用VS Code的IDE。

作为开源软件，DevC++用的编译器也是开源的gcc/g++，但它那个环境是基于MinGW的。下
面这个图示意了多种gcc运行环境的区别：

.. figure:: _static/c++开发环境的原理.svg

你现在用WSL最大的缺点是不能用图形界面（其实也可以用的，要更多的设置而已，那个我
们先不搞）。它这个用DevC++好处就是不需要WSL，直接就可以当作普通的Windows程序运行。

运行起来是这样的：

.. figure:: _static/devc++.jpg

里面那些概念其实你都知道，创建多个.cc，多个.hh，都可以在这个图形界面上看到。但
其实和你一个个打开它们并没有区别。Makefile不需要你写，它会根据你有多少个cc文件，
自动生成这个文件。但如果你要做更复杂的控制，那你最终还是要自己写Makefile的。

这里还要理解一个Project的概念，所谓Project，就是我前面讲的“工程”的概念，就是帮
你记住你有多少个文件，每个文件怎么编译，打开这个文件的时候用什么缩进等等。这些
信息记录在一个叫.dev的文件中，但格式是什么样的，就只有这个工具才知道。所以我个
人不是特别喜欢这种IDE环境，因为这样如果我换一个工具，这些内容就都解释不了了。

其他东西你可以一个菜单一个菜单去试，反正概念之前都介绍过。如果你只是写教材中那
些简单的程序，通常你在Project中增加一个个的.cc或者.hh文件，然后敲进去，然后什么
都不管，按F9就是编译，F10就是运行。F2是在当前光标位置设置断点，F5就是开始调试。
简单试一下就可以开始。这种东西很简单，很多老师喜欢拿这个东西教人入门，因为不用
折腾，但这样学习你可能学很久都弄不清楚你的程序是怎么工作的。

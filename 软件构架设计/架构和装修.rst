.. Kenneth Lee 版权所有 2021

:Authors: Kenneth Lee
:Version: 1.0
:Date: 2021-12-25
:Status: Draft

架构和装修
**********

最近看明白了一个问题，这里总结一下。

有些工程师刚刚从代码维护上转来做架构设计工作，设计拿出来总让很难受。我明确知道
这个设计是错的，但很难给他和其他不是做架构设计的人解释他“哪句话说错了”，因为问
题不是这句话对不对，而是这句话该不该说。

我发现这种问题是这样发生的：

比如他习惯了维护一个网卡，这个网卡需要向一个内存池里面填数据报文，内存池分成多
个子池，网卡基于对端的mac地址对内存进行分类，多个子池共享一个中断源，在任何一个
子池超过水线的时候都会产生一个中断。

他平时很熟悉这些中断，水线等等的行为，所以他也很擅长如何把哪几个子池合并，也知
道如果增加一个硬件故障中断应该把这个中断和水线中断合并还是独立出来。

现在如果让这位工程师设计一个新的网卡，如果他缺乏架构设计的经验，他可能上来就开
始说，内存池可以合并成一个让多个CPU无锁共享，维持需要再引入一个内存分区的概念……
等等。

作为一个架构师，我看到这种描述就脑子痛，因为在我看来：你做一个新的网卡，我用不
用内存池都没有打算呢，你上来给我谈什么内存池的，我的逻辑应该建在哪里？

如果原来的概念空间仅仅需要改进，我何必再做一张网卡呢？我把原来的网卡升级一下不
就完了？我必然是基本条件发生了改变了，我才另外做一张网卡呀。所以，作为一个架构
师，我第一件事，是要找的新的房子的地基在哪里。什么内存池，什么中断源，都不是我
的逻辑地基。因为不是我做了这些事情客户就会埋单的啊。

所以，前面说的那位虚拟的设计师的行为其似乎就是在做装修队的事情，是在已经完成的
构架上做装饰而已，肯定不会动承重墙的，这种做法是不能用在构架设计上的。你不能把
装修队的设计思路放在建房子上。

对我来说，做一张新的网卡，核心的，不变的逻辑地基是“把网络上的消息送到CPU上去处
理”，这是最坚实的地基，后面什么搞不定，都可以放弃，只有这个事情高补丁，这个事情
就不用干下去了。然后我才开始排我其他逻辑，比如，我可能识别到另一个需求：这张网
卡大部分流量都是转发报文。好了，我们的逻辑可以向上长了，如果我把路由下沉给网卡
，网卡和CPU的通讯压力就可以降下来，但路由算法如何表达就成为一个关键问题了。是在
网卡里面加NP或者MCU好呢？还是使用一个硬件加上一组可配置参数更好呢？这些问题哪个
都比用不用内存池问题大。

这些东西都看不见呢，你给我大谈内存池，我看见就脑子乱。就好比我们正在讨论房子怎
么建呢，你跟我谈三楼的厕所下水管道必须从西侧外墙出去？然后问我“这难道不是这个房
子设计的一部分？”我就很晕，不知道和你说什么。

所以，装修和架构的区别就在这里，装修大部分不变的东西都是固定了的，你根据一大堆
固定的条件决定怎么做就好了。架构不是这样的，架构关键是找到每一层的根基。我们对
确定那些条件是稳固的很看重。对架构来说，只有地基是稳定的（甚至可能地基都不是稳
的），然后我在地基上建立一层的框架，然后我思考第二层的时候，发现第一层没有实现
对第二层所需的承重，我会拆掉第一层重建的。所以在建构眼中，每个逻辑都是有强度的
，这个强度被承载它的其他地基所保证。我们需要一个NP/MCU，是被“路由下移”这个条件
所支撑的，而“路由下移”这个条件，是由“网卡的大部分流量都是转发”这个条件支撑的，
如果“网卡要用于另一个市场，大部分流量是要CPU处理的，而且这个市场的CPU主频很低，
分布这些流量是第一需求”，很多逻辑就会崩塌，我们就需要把依靠这个逻辑的一整套逻辑
拆掉，然后加入其他支撑，去保护其他的逻辑投资。

也正因为如此，架构设计非常关心抽象的范围。我们给一个总结：“所有中断全部通过中断
路由器收集，根据中断路由表转发给不同的CPU”，我们是mean to的，是真的认为所有的中
断都是这样的。因为我们下一层设计就可以完全依赖这一点了。我们会说，因为所有中断
都经过中断路由器，如果我们初始化的时候把所有中断路由给CPU0，那么我们就认为只要
我们没有进行中断路由的初始化，CPU1肯定不会收到中断的。构成这个逻辑后，我说不定
因此就开始为此实现一个无锁算法……架构设计上一点点的假设，都会成为非常高层的逻辑
的依托，一旦你不成立，这些逻辑全部都会崩塌。比如我已经设计了一个非常精巧的无锁
算法，要求周边4个模块给出了保证，它们为了这一点也作出了很多保护性的设计，最后你
告诉我，不好意思，RAS和CPU IPI中断可以越过中断路由报上去，我这些工作就全部白干
了。

而这种抽象设计，也是架构设计全部经验和技巧所在。我们不少人建第一层架构逻辑，一旦
说不清楚，就开始说“请参考后面的细节”，不！我们不看你后面的细节，我们只看你这一层
建立的逻辑是不是通的。细节是要依附到这个抽象来的，否则要你抽象干什么？

你做一个中断控制器，说好中断源有多少种，分别怎么报给那个中断路由装置，然后怎么
调度给CPU，CPU按什么原则来排队。我们就谈这样的一个结构是否满足我们所有的要求。
你能这个东西说不清楚，就给我谈“如果qemu virtio里面要产生一个中断，我们可以这样
这样，再这样这样……”，你一旦进入这种细节，那你的地基稳不稳这件事就没有了，这种情
况下，我根本不知道这个房子会不会塌。而一个下水道从左边下还是右边下的问题，就算
解决了又如何呢？
